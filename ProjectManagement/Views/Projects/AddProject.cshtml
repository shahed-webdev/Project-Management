@model ProjectAddModel
@{
    ViewData["Title"] = "Add Project";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles{
    <link href="~/pages-css/add-project.css?v=1" rel="stylesheet" />
    <style>
        #successMessage { display: none }
        #donor-container span { background-color: #ddd; border-radius: 5px; padding: 4px 8px; margin-right: 7px; text-align: center; margin-bottom: 6px; display: inline-block; }
        #donor-container span i { font-size: .9rem; cursor: pointer; margin-left: 5px; }
    </style>
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h4 class="page-header mt-2">Add Project</h4>
            <p class="mb-3">@ViewBag.linkTitle</p>
        </div>
        <a href="/Projects/Features"><i class="fas fa-long-arrow-alt-left mr-1"></i> Back to Features</a>
    </div>

    <div id="successMessage" class="alert alert-success text-center" role="alert">
        Project Submitted Successfully!
    </div>

    <form id="formStep">
        <div class="card card-body">
            <ul id="progressbar">
                <li class="active">Step 1</li>
                <li>Step 2</li>
            </ul>

            <div class="row">
                <div class="col-lg-6">
                    <div class="md-form">
                        <input type="text" id="inputTitle" class="form-control">
                        <label for="inputTitle">Title</label>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="md-form">
                        <input type="text" id="inputDescription" class="form-control">
                        <label for="inputDescription">Description</label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-4">
                    <div class="md-form">
                        <input type="text" id="inputStartDate" value="@DateTime.Now.ToString("d MMMM, yyyy")" class="form-control datepicker">
                        <label for="inputStartDate">Start Date</label>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="md-form">
                        <input type="text" id="inputEndDate" class="form-control datepicker" value="@DateTime.Now.ToString("d MMMM, yyyy")">
                        <label for="inputEndDate">End Date</label>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="md-form">
                        <select id="selectStatus" asp-items="@ViewBag.Status" class="mdb-select md-form" searchable="Search here..">
                            <option value="" disabled selected>Choose Status</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-5">
                    <div class="md-form mb-0">
                        <input type="text" id="inputDonors" class="form-control">
                        <label for="inputDonors">Donor</label>
                    </div>
                    <div id="donor-container" class="mb-4"></div>
                </div>
                <div class="col-lg-7">
                    <div class="md-form">
                        <input type="text" id="inputSectors" class="form-control" disabled value="@ViewBag.linkTitle">
                        <label for="inputSectors">Sector</label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="md-form">
                        <input type="number" id="inputTotalBudget" class="form-control">
                        <label for="inputTotalBudget">Total Budget</label>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="md-form">
                        <input type="number" id="inputTotalExpenditure" class="form-control">
                        <label for="inputTotalExpenditure">Total Expenditure</label>
                    </div>
                </div>
            </div>

            <fieldset class="border px-4 pb-4 pt-2 rounded mt-3">
                <legend class="w-auto m-0">Location</legend>
                <div class="row">
                    <div class="col-lg-4">
                        <select asp-items="@ViewBag.Country" id="selectCountry" class="mdb-select md-form m-0" searchable="Search here..">
                            <option value="" disabled selected>Country</option>
                        </select>
                    </div>
                    <div class="col-lg-4">
                        <select id="selectState" class="mdb-select md-form m-0" searchable="Search here..">
                            <option value="" disabled selected>State</option>
                        </select>
                    </div>
                    <div class="col-lg-4">
                        <select id="selectCity" class="mdb-select md-form m-0" searchable="Search here..">
                            <option value="" disabled selected>City</option>
                        </select>
                    </div>
                </div>
            </fieldset>

            <div class="row my-4">
                <div class="col-lg-12">
                    <div class="md-form">
                        <div class="file-field">
                            <div class="btn btn-outline-info btn-rounded btn-sm float-left">
                                <span>Choose Photo</span>
                                <input id="inputPhoto" type="file" accept="image/*">
                            </div>
                            <div class="file-path-wrapper">
                                <input id="filePath" class="file-path validate" type="text" placeholder="Upload Photo">
                            </div>
                        </div>
                        <span id="imageError" class="field-validation-error"></span>
                    </div>
                </div>
            </div>

            <label id="beneficiaryError" class="red-text d-inline-block"></label>
            <table class="table">
                <thead class="grey lighten-5">
                    <tr>
                        <th>
                            <select asp-items="@ViewBag.Type" id="selectBeneficiaryType" class="mdb-select md-form m-0">
                                <option value="" disabled selected>Beneficiary Type</option>
                            </select>
                        </th>
                        <th>
                            <div class="md-form m-0">
                                <input type="text" id="inputBeneficiaryCount" class="form-control">
                                <label for="inputBeneficiaryCount">Beneficiary Count</label>
                            </div>
                        </th>
                        <th class="text-right" style="width: 130px">
                            <button id="btnBeneficiaryAdd" type="button" class="btn btn-sm btn-outline-success btn-rounded mb-0"><i class="fas fa-user-plus"></i> Add</button>
                        </th>
                    </tr>
                </thead>
                <tbody id="beneficiaryTypeBody"></tbody>
            </table>
        </div>

        <div class="text-right mt-4">
            <button class="btn btn-custom-bg">Next Step <i class="fas fa-arrow-right ml-2"></i></button>
        </div>
    </form>

    <form id="formAdd">
        <div class="card card-body">
            <div class="row">
                <div class="col-lg-4">
                    <div class="md-form">
                        <input type="text" id="inputProjectName" class="form-control" disabled>
                        <label for="inputProjectName">Project Name</label>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="md-form">
                        <input type="text" id="inputSubmissionDate" class="form-control datepicker" value="@DateTime.Now.ToString("d MMMM, yyyy")">
                        <label for="inputSubmissionDate">Submission Date</label>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="md-form">
                        <input type="text" id="inputReportName" disabled class="form-control">
                        <label for="inputReportName">Report Name</label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-5">
                    <select asp-items="@ViewBag.ReportType" id="selectReportName" class="mdb-select md-form" searchable="Search here..">
                        <option value="" disabled selected>Report Name</option>
                    </select>
                </div>

                <div class="col-lg-7">
                    <div class="md-form">
                        <div class="file-field">
                            <div class="btn btn-outline-info btn-rounded btn-sm float-left">
                                <span>Choose Attachment</span>
                                <input id="inputAttachment" type="file">
                            </div>
                            <div class="file-path-wrapper">
                                <input id="filePath2" class="file-path validate" type="text" placeholder="Upload Attachment">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-4">
            <button id="btnPrevious" type="button" class="btn btn-grey"><i class="far fa-long-arrow-alt-left mr-1"></i>Previous</button>
            <button type="submit" class="btn btn-custom-bg">Submit</button>
        </div>
    </form>
</div>

@section Scripts{

    <script>
        $(function() {
            $('.mdb-select').materialSelect();
            $('.datepicker').pickadate();
        });

        //set image file
        const inputPhoto = document.getElementById("inputPhoto");
        const inputAttachment = document.getElementById("inputAttachment");

        //image file
        inputPhoto.addEventListener("change", function(e) {
            const imageError = document.getElementById("imageError");
            const pathInput = document.getElementById("filePath");

            imageError.textContent = "";

            const size = e.target.files[0].size / 1024 / 1024;
            const allowSize = 2;
            const regex = new RegExp("(.*?)\.(jpeg|jpg|png|webp)$");

            if (!(regex.test(e.target.value.toLowerCase()))) {
                e.target.value = "";
                pathInput.value = "";

                imageError.textContent = `Please select correct file format`;
                return;
            }

            if (size > allowSize) {
                e.target.value = "";
                pathInput.value = "";

                imageError.textContent = `image size must be less than ${allowSize}MB. your file size:${size.toFixed()} MB`;
                return;
            }

            pathInput.value = e.target.files[0].name;
        });

        //file attachment
        inputAttachment.addEventListener("change", function(e) {
            const pathInput = document.getElementById("filePath2");
            pathInput.value = e.target.files[0].name;
        });


        //global model
        const model = {
            ProjectDonors: [],
            ProjectBeneficiaries: [],
            ProjectReports: []
        };

        //selectors
        const formStep = document.getElementById("formStep");
        const btnPrevious = document.getElementById("btnPrevious");
        const formAdd = document.getElementById("formAdd");
        //location
        const selectCountry = document.getElementById("selectCountry");
        const selectState = document.getElementById("selectState");
        const selectCity = document.getElementById("selectCity");

        //on change country
        selectCountry.addEventListener("change", function() {
            const id = +this.value

            if (!id) return;

            $.ajax({
                url: "/Projects/GetStateByCountry",
                data: { id },
                success: function(response) {
                    if (!response.IsSuccess) return;

                    const fragment = document.createDocumentFragment();
                    const option1 = document.createElement("option");
                    option1.value = "";
                    option1.text = "State";
                    option1.setAttribute("disabled", "disabled");
                    option1.setAttribute("selected", true);
                    fragment.appendChild(option1);

                    response.Data.forEach(item => {
                        const option = document.createElement("option");
                        option.value = item.value;
                        option.text = item.label;
                        fragment.appendChild(option);
                    });

                    selectState.innerHTML = "";
                    selectState.appendChild(fragment);
                },
                error: function(err) {
                    console.log(err);
                }
            });
        });

        //on change state
        selectState.addEventListener("change", function() {
            const id = +this.value

            if (!id) return;

            $.ajax({
                url: "/Projects/GetCityByState",
                data: { id },
                success: function(response) {
                    if (!response.IsSuccess) return;

                    const fragment = document.createDocumentFragment();
                    const option1 = document.createElement("option");
                    option1.value = "";
                    option1.text = "City";
                    option1.setAttribute("disabled", "disabled");
                    option1.setAttribute("selected", true);
                    fragment.appendChild(option1);

                    response.Data.forEach(item => {
                        const option = document.createElement("option");
                        option.value = item.value;
                        option.text = item.label;
                        fragment.appendChild(option);
                    });

                    selectCity.innerHTML = "";
                    selectCity.appendChild(fragment);
                },
                error: function(err) {
                    console.log(err);
                }
            });
        });

        //Donors autocomplete
        const donorContainer = document.getElementById("donor-container");
        $('#inputDonors').typeahead({
            minLength: 1,
            displayText: function(item) {
                return item.Name;
            },
            afterSelect: function(item) {
                this.$element[0].value = "";
            },
            source: function(request, result) {
                $.ajax({
                    url: "/Projects/FindDonors",
                    data: { name: request },
                    success: function(response) { result(response); },
                    error: function(err) { console.log(err) }
                });
            },
            updater: function(item) {
                appendDonor(item);
                console.log(item)
                return item;
            }
        });

        //add donor
        function appendDonor(donor) {
            if (model.ProjectDonors.indexOf(donor.DonorId) !== -1) return;

            model.ProjectDonors.push(donor.DonorId);

            const span = document.createElement("span");
            span.innerHTML = `<strong>${donor.Name}</strong><i data-id="${donor.DonorId}" class="delete fas fa-times-circle"></i>`;

            donorContainer.appendChild(span);
        }

        //remove donor
        donorContainer.addEventListener("click", function(evt) {
            const element = evt.target;
            const onDelete = element.classList.contains("delete");
            console.log(onDelete)
            if (!onDelete) return;

            const id = +element.getAttribute("data-id");
            const index = model.ProjectDonors.indexOf(id);

            if (index > -1) {
                model.ProjectDonors.splice(index, 1);
                element.parentElement.remove();
            }
        });

        //**Beneficiary Add***
        const btnBeneficiaryAdd = document.getElementById("btnBeneficiaryAdd");
        const beneficiaryError = document.getElementById("beneficiaryError");

        btnBeneficiaryAdd.addEventListener("click", function(evt) {
            evt.preventDefault();
            beneficiaryError.textContent = "";

            const id = +selectBeneficiaryType.value;
            const type = selectBeneficiaryType.options[selectBeneficiaryType.selectedIndex].text;
            const count = +inputBeneficiaryCount.value;
   
            if (!id) {
                beneficiaryError.textContent = "Select Beneficiary Type";
                return;
            }

            if (!count) {
                beneficiaryError.textContent = "Add Beneficiary Count";
                return;
            }

            const obj = {
                ProjectBeneficiaryTypeId: id,
                Count: count
            }

            const isAdded = model.ProjectBeneficiaries.some(function(el) {
                return el.ProjectBeneficiaryTypeId === id;
            });
     
            if (isAdded) return;

            model.ProjectBeneficiaries.push(obj);

            const tr = document.createElement("tr");
            tr.innerHTML = `<td>${type}</td><td>${count}</td><td><i data-id="${id}" class="remove fas fa-trash-alt red-text" style="cursor: pointer"></i></td>`;
            beneficiaryTypeBody.appendChild(tr);
        });

        //first step
        formStep.addEventListener("submit", function(evt) {
            evt.preventDefault();

            stepChange(true);

            if (this.inputTitle.value) {
                formAdd.inputProjectName.value = this.inputTitle.value;
                formAdd.inputProjectName.nextElementSibling.classList.add("active");

                formAdd.inputReportName.value = this.inputTitle.value;
                formAdd.inputReportName.nextElementSibling.classList.add("active");
            }
        });

        //Previous
        btnPrevious.addEventListener("click", function(evt) {
            evt.preventDefault();

            stepChange(false);
        });

        //post project
        formAdd.addEventListener("submit", function(evt) {
            evt.preventDefault();

            if (!formStep.inputTitle.value) {
                stepChange(false);

                formStep.inputTitle.setAttribute("required", "required");
                formStep.inputTitle.focus();

                return;
            }


            document.getElementById("successMessage").style.display = "block";
            this.style.display = "none";
        })

        //next or prev page
        function stepChange(isNext) {
            if (isNext) {
                formStep.style.display = "none";
                formAdd.style.display = "block";
            } else {
                formStep.style.display = "block";
                formAdd.style.display = "none";
            }
        }
    </script>
}