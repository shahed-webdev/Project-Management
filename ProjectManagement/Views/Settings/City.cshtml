
@{
    ViewData["Title"] = "City";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    <h4 class="page-header mb-3">Village</h4>
    <div class="card mb-3 px-3 py-2">
        <form id="formAdd">
            <div class="row">
                <div class="col">
                    <select asp-items="@ViewBag.Country" id="selectCountry" class="mdb-select md-form" searchable="Search here.." required>
                        <option value="" disabled selected>District</option>
                    </select>
                </div>
                <div class="col">
                    <select id="selectState" class="mdb-select md-form" searchable="Search here.." required>
                        <option value="" disabled selected>Sub-District</option>
                    </select>
                </div>
                <div class="col">
                    <div class="md-form input-group">
                        <input id="inputCityName" type="text" class="form-control" required>
                        <label for="inputCityName">Village</label>

                        <div class="input-group-append">
                            <button class="btn btn-md btn-custom-bg m-0 px-3" type="submit">Add</button>
                        </div>
                    </div>
                </div>
            </div>
            <span id="error" class="red-text"></span>
        </form>
    </div>

    <div class="card card-body">
        <ul id="listItem" class="list-group list-group-flush"></ul>
    </div>
</div>

<!--update modal-->
<div class="modal fade" id="updateModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-notify modal-info" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h4 class="modal-title white-text w-100 font-weight-bold">Update</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="white-text">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form id="formUpdate">
                    <input type="hidden" id="hiddenUpdateId">
                    <div class="form-group">
                        <label for="inputUpdatedData">Village</label>
                        <input type="text" id="inputUpdatedData" class="form-control" required>
                    </div>
                    <div class="d-flex justify-content-center mt-4">
                        <button type="submit" class="btn btn-outline-info waves-effect">Update <i class="fas fa-paper-plane-o ml-1"></i></button>
                    </div>
                </form>
                <span id="error2" class="red-text"></span>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        $(function() {
            $('.mdb-select').materialSelect();
        });

        //selectors
        const formAdd = document.getElementById("formAdd");
        const selectCountry = document.getElementById("selectCountry");
        const selectState = document.getElementById("selectState");
        const listItem = document.getElementById("listItem");
        const error = document.getElementById("error");

        const formUpdate = document.getElementById("formUpdate");
        const modalContainer = $("#updateModal");

        //country change
        selectCountry.addEventListener("change", function() {
            const id = +this.value;

            selectState.innerHTML = "";
            listItem.innerHTML = "";

            if (!id) return;

            $.ajax({
                url: "/Settings/GetStateByCountry",
                data: { id },
                success: function(response) {
                    const fragment = document.createDocumentFragment();

                    const option1 = document.createElement("option");
                    option1.value = "";
                    option1.text = "Sub-District";
                    option1.setAttribute("disabled", "disabled");
                    option1.setAttribute("selected", true);
                    fragment.appendChild(option1);

                    response.forEach(item => {
                        const option = document.createElement("option");
                        option.value = item.StateId;
                        option.text = item.StateName;
                        fragment.appendChild(option);
                    });

                    selectState.append(fragment);
                },
                error: function(err) {
                    console.log(err);
                }
            });
        });

        //state change
        selectState.addEventListener("change", function() {
            const id = +this.value;
            appendData(id);
        });

        //append to dom
        function appendData(id) {
            listItem.innerHTML = "";
            if (!id) return;

            $.ajax({
                url: "/Settings/GetCityByState",
                data: { id },
                success: function(response) {
                    const fragment = document.createDocumentFragment();
                    response.forEach(item => {
                        const li = document.createElement("li");
                        li.className = "list-group-item d-flex justify-content-between align-items-center";
                        li.innerHTML = `<strong>${item.CityName}</strong>
                          <div>
                            <a data-id="${item.CityId}" class="far fa-trash red-text mr-3 delete"></a>
                            <a data-id="${item.CityId}" data-value="${item.CityName}" class="far fa-edit btnUpdate"></a>
                          </div>`;
                        fragment.appendChild(li);
                    });

                    listItem.append(fragment);
                },
                error: function(err) {
                    console.log(err);
                }
            });
        }


        //insert
        formAdd.addEventListener("submit", function(evt) {
            evt.preventDefault();

            const model = {
                StateId: +this.selectState.value,
                CityName: this.inputCityName.value
            }

            $.ajax({
                url: "/Settings/PostCity",
                type: "POST",
                data: model,
                success: response => {
                    if (response.IsSuccess) {
                        appendData(model.StateId);
                        this.inputCityName.value = "";
                        return;
                    }

                    error.textContent = response.Message;
                },
                error: function(err) {
                    console.log(err);
                }
            });
        });

        //on edit/delete
        listItem.addEventListener("click", function(evt) {
            const element = evt.target;
            const onUpdate = element.classList.contains("btnUpdate");
            const onDelete = element.classList.contains("delete");

            if (onUpdate) {
                formUpdate.hiddenUpdateId.value = element.getAttribute("data-id");
                formUpdate.inputUpdatedData.value = element.getAttribute("data-value");

                modalContainer.modal("show");
            }

            //delete
            if (onDelete) {
                $.ajax({
                    url: "/Settings/DeleteCity",
                    type: "POST",
                    data: { id: element.getAttribute("data-id") },
                    success: response => {
                        if (response.IsSuccess)
                            element.parentElement.parentElement.remove();

                        $.notify(response.Message, response.IsSuccess ? "success" : "error");
                    },
                    error: err => console.log(err)
                });
            }
        });

        //update
        formUpdate.addEventListener("submit", function(evt) {
            evt.preventDefault();

            const model = {
                StateId: formAdd.selectState.value,
                CityId: this.hiddenUpdateId.value,
                CityName: this.inputUpdatedData.value
            }

            $.ajax({
                url: "/Settings/UpdateCity",
                type: "POST",
                data: model,
                success: function(response) {
                    if (response.IsSuccess) {
                        location.reload();
                        return;
                    }

                    error2.textContent = response.Message;
                },
                error: function(err) {
                    console.log(err);
                }
            });
        });
    </script>
}

